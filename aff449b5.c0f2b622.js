(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{93:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return o})),a.d(t,"metadata",(function(){return s})),a.d(t,"toc",(function(){return r})),a.d(t,"default",(function(){return b}));var n=a(3),i=a(7),l=(a(110),a(111)),o={id:"amf_intro",title:"What is AMF?"},s={unversionedId:"AMF/amf_intro",id:"AMF/amf_intro",isDocsHomePage:!1,title:"What is AMF?",description:"AMF (AML Modeling Framework) is an open-source library capable of parsing and validating  AML metadata documents.",source:"@site/../docs/AMF/what_is_amf.mdx",slug:"/AMF/amf_intro",permalink:"/docs/AMF/amf_intro",version:"current",lastUpdatedBy:"arielmirra",lastUpdatedAt:1610636785,sidebar:"docs",next:{title:"AMFs supported Specs",permalink:"/docs/AMF/amf_support"}},r=[{value:"Vision",id:"vision",children:[]},{value:"Goals",id:"goals",children:[]},{value:"Native support",id:"native-support",children:[{value:"Features",id:"features",children:[]},{value:"Artifacts",id:"artifacts",children:[]}]}],c={toc:r};function b(e){var t=e.components,a=Object(i.a)(e,["components"]);return Object(l.b)("wrapper",Object(n.a)({},c,a,{components:t,mdxType:"MDXLayout"}),Object(l.b)("p",null,Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/aml-org/amf"}),"AMF")," (AML Modeling Framework) is an open-source library capable of parsing and validating  AML metadata documents.\nAMF is fully written in Scala, and thanks to ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"https://www.scala-js.org/"}),"Scala.js")," it can be executed in the JVM, Node.js or the browser.\nAMF can be used as a standalone command-line tool or as a library in Scala, Java, web or node applications."),Object(l.b)("p",null,"AMF source code is publicly available under the ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"https://www.apache.org/licenses/LICENSE-2.0"}),"Apache 2.0 License")," in the ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/aml-org/amf"}),"AMF Github repository"),"."),Object(l.b)("p",null,"The modular design of AMF facilitates creating plugins capable of parsing other metadata syntaxes not defined by AML.\nFor example, the most used AMF module, the web-api module, is capable of parsing ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"https://raml.org/"}),"RAML"),", ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/OAI/OpenAPI-Specification"}),"OAS")," (formerly Swagger) and ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/asyncapi/asyncapi"}),"AsyncAPI")," API specification languages.\nFurthermore, AMF can also validate APIs, and even emit them in different API languages."),Object(l.b)("h2",{id:"vision"},"Vision"),Object(l.b)("p",null,Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"https://a.ml/aml-spec"}),"AML")," allows users to formally describe different kinds of models, whether syntactic models (i.e. language/specification specific) or semantic models (i.e. domain/industry specific).\nAMF can parse and generate descriptions of those models as sets of modular documents and store those connected descriptions into a single unified data graph."),Object(l.b)("h2",{id:"goals"},"Goals"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Support for multiple formats with a unified programming interface and model"),Object(l.b)("li",{parentName:"ul"},"Support for both syntactic and semantic model layers"),Object(l.b)("li",{parentName:"ul"},"Support for validation at both syntactic and semantic model layers"),Object(l.b)("li",{parentName:"ul"},"Produce formal specifications of any (specification) language"),Object(l.b)("li",{parentName:"ul"},"Extensible, single syntactic model for multiple semantic models"),Object(l.b)("li",{parentName:"ul"},"Ability to create consistent parsing behaviors across different syntactic models"),Object(l.b)("li",{parentName:"ul"},"Support for bi-directional transformation and export"),Object(l.b)("li",{parentName:"ul"},"Support for custom (parsing/resolution/generation) pipelines")),Object(l.b)("h2",{id:"native-support"},"Native support"),Object(l.b)("p",null,"AMF natively supports the following formats:"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"YAML"),Object(l.b)("li",{parentName:"ul"},"JSON")),Object(l.b)("p",null,"the following semantic models:"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},'WebApi (or "Web APIs" as in "APIs accessible over the network")')),Object(l.b)("p",null,"and the following syntactic models:"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},'JSON-LD "AMF model"'),Object(l.b)("li",{parentName:"ul"},'RAML 0.8 / 1.0 (mapped to "WebApi")'),Object(l.b)("li",{parentName:"ul"},'OpenAPI (OAS) 2.0 / 3.0 (mapped to "WebApi")'),Object(l.b)("li",{parentName:"ul"},'AsyncAPI 2.0 (mapped to "AsyncApi")')),Object(l.b)("p",null,"The models above and any other models may be extended and supported via custom ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"https://a.ml/aml-spec"}),"AML-defined models"),".\nOther formats and models that cannot be expressed with AML may also be supported via plugins."),Object(l.b)("h3",{id:"features"},"Features"),Object(l.b)("p",null,"AMF has many features such as:"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Parsing"),Object(l.b)("li",{parentName:"ul"},"Resolution",Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},"Stages & Pipelines"))),Object(l.b)("li",{parentName:"ul"},"Validation",Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},"Custom Model Constraints (WebApi)"),Object(l.b)("li",{parentName:"ul"},"SHACL (Vocabularies & Custom validations)"))),Object(l.b)("li",{parentName:"ul"},"Rendering")),Object(l.b)("h3",{id:"artifacts"},"Artifacts"),Object(l.b)("p",null,"Artifacts to use AMF can be obtained from:"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"https://repository-master.mulesoft.org/nexus/content/repositories/releases/com/github/amlorg/"}),"Maven")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"https://www.npmjs.com/package/amf-client-js"}),"NPM"))),Object(l.b)("p",null,"In the next section you can learn how to quickly get started using AMF."))}b.isMDXComponent=!0}}]);