{"remainingRequest":"/Users/aloose/mulesoft/a-ml/website/node_modules/babel-loader/lib/index.js??ref--8-1!/Users/aloose/mulesoft/a-ml/website/node_modules/@docusaurus/core/lib/client/docusaurus.js","dependencies":[{"path":"/Users/aloose/mulesoft/a-ml/website/node_modules/@docusaurus/core/lib/client/docusaurus.js","mtime":499162500000},{"path":"/Users/aloose/mulesoft/a-ml/website/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/aloose/mulesoft/a-ml/website/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:LyoqCiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLgogKgogKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGUKICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLgogKi9pbXBvcnR7bWF0Y2hSb3V0ZXN9ZnJvbSdyZWFjdC1yb3V0ZXItY29uZmlnJztpbXBvcnQgcm91dGVzQ2h1bmtOYW1lcyBmcm9tJ0BnZW5lcmF0ZWQvcm91dGVzQ2h1bmtOYW1lcyc7aW1wb3J0IHJvdXRlcyBmcm9tJ0BnZW5lcmF0ZWQvcm91dGVzJztpbXBvcnQgcHJlZmV0Y2hIZWxwZXIgZnJvbScuL3ByZWZldGNoJztpbXBvcnQgcHJlbG9hZEhlbHBlciBmcm9tJy4vcHJlbG9hZCc7aW1wb3J0IGZsYXQgZnJvbScuL2ZsYXQnO3ZhciBmZXRjaGVkPXt9O3ZhciBsb2FkZWQ9e307dmFyIGlzU2xvd0Nvbm5lY3Rpb249ZnVuY3Rpb24gaXNTbG93Q29ubmVjdGlvbigpey8vIElmIHVzZXIgaXMgb24gc2xvdyBvciBjb25zdHJhaW5lZCBjb25uZWN0aW9uLgppZigiY29ubmVjdGlvbiJpbiBuYXZpZ2F0b3Ipe2lmKChuYXZpZ2F0b3IuY29ubmVjdGlvbi5lZmZlY3RpdmVUeXBlfHwiIikuaW5kZXhPZigiMmciKSE9PS0xJiZuYXZpZ2F0b3IuY29ubmVjdGlvbi5zYXZlRGF0YSl7cmV0dXJuIHRydWU7fX1yZXR1cm4gZmFsc2U7fTt2YXIgY2FuUHJlZmV0Y2g9ZnVuY3Rpb24gY2FuUHJlZmV0Y2gocm91dGVQYXRoKXtyZXR1cm4haXNTbG93Q29ubmVjdGlvbigpJiYhbG9hZGVkW3JvdXRlUGF0aF0mJiFmZXRjaGVkW3JvdXRlUGF0aF07fTt2YXIgY2FuUHJlbG9hZD1mdW5jdGlvbiBjYW5QcmVsb2FkKHJvdXRlUGF0aCl7cmV0dXJuIWlzU2xvd0Nvbm5lY3Rpb24oKSYmIWxvYWRlZFtyb3V0ZVBhdGhdO307dmFyIGZsYXR0ZW49ZnVuY3Rpb24gZmxhdHRlbihhcnJheXMpe3JldHVybiBBcnJheS5wcm90b3R5cGUuY29uY2F0LmFwcGx5KFtdLGFycmF5cyk7fTsvLyBSZW1vdmUgdGhlIGxhc3QgcGFydCBjb250YWluaW5nIHRoZSByb3V0ZSBoYXNoCi8vIGlucHV0OiAvYmxvZy8yMDE4LzEyLzE0L0hhcHB5LUZpcnN0LUJpcnRoZGF5LVNsYXNoLWZlOQovLyBvdXRwdXQ6IC9ibG9nLzIwMTgvMTIvMTQvSGFwcHktRmlyc3QtQmlydGhkYXktU2xhc2gKdmFyIHJlbW92ZVJvdXRlTmFtZUhhc2g9ZnVuY3Rpb24gcmVtb3ZlUm91dGVOYW1lSGFzaChzdHIpe3JldHVybiBzdHIucmVwbGFjZSgvKC1bXi1dKykkLywnJyk7fTt2YXIgZ2V0Q2h1bmtOYW1lc1RvTG9hZD1mdW5jdGlvbiBnZXRDaHVua05hbWVzVG9Mb2FkKHBhdGgpe3JldHVybiBmbGF0dGVuKE9iamVjdC5lbnRyaWVzKHJvdXRlc0NodW5rTmFtZXMpLmZpbHRlcihmdW5jdGlvbihfcmVmKXt2YXIgcm91dGVOYW1lV2l0aEhhc2g9X3JlZlswXTtyZXR1cm4gcmVtb3ZlUm91dGVOYW1lSGFzaChyb3V0ZU5hbWVXaXRoSGFzaCk9PT1wYXRoO30pLm1hcChmdW5jdGlvbihfcmVmMil7dmFyIHJvdXRlQ2h1bmtzPV9yZWYyWzFdOy8vIGZsYXQoKSBpcyB1c2VmdWwgZm9yIG5lc3RlZCBjaHVuayBuYW1lcywgaXQncyBub3QgbGlrZSBhcnJheS5mbGF0KCkKcmV0dXJuIE9iamVjdC52YWx1ZXMoZmxhdChyb3V0ZUNodW5rcykpO30pKTt9O3ZhciBkb2N1c2F1cnVzPXtwcmVmZXRjaDpmdW5jdGlvbiBwcmVmZXRjaChyb3V0ZVBhdGgpe2lmKCFjYW5QcmVmZXRjaChyb3V0ZVBhdGgpKXtyZXR1cm4gZmFsc2U7fS8vIFByZXZlbnQgZnV0dXJlIGR1cGxpY2F0ZSBwcmVmZXRjaCBvZiByb3V0ZVBhdGguCmZldGNoZWRbcm91dGVQYXRoXT10cnVlOy8vIEZpbmQgYWxsIHdlYnBhY2sgY2h1bmsgbmFtZXMgbmVlZGVkLgp2YXIgbWF0Y2hlcz1tYXRjaFJvdXRlcyhyb3V0ZXMscm91dGVQYXRoKTt2YXIgY2h1bmtOYW1lc05lZWRlZD1mbGF0dGVuKG1hdGNoZXMubWFwKGZ1bmN0aW9uKG1hdGNoKXtyZXR1cm4gZ2V0Q2h1bmtOYW1lc1RvTG9hZChtYXRjaC5yb3V0ZS5wYXRoKTt9KSk7Ly8gUHJlZmV0Y2ggYWxsIHdlYnBhY2sgY2h1bmsgYXNzZXRzIGZpbGUgbmVlZGVkLgpjaHVua05hbWVzTmVlZGVkLmZvckVhY2goZnVuY3Rpb24oY2h1bmtOYW1lKXsvLyAiX193ZWJwYWNrX3JlcXVpcmVfXy5nY2EiIGlzIGEgY3VzdG9tIGZ1bmN0aW9uIHByb3ZpZGVkIGJ5IENodW5rQXNzZXRQbHVnaW4uCi8vIFBhc3MgaXQgdGhlIGNodW5rTmFtZSBvciBjaHVua0lkIHlvdSB3YW50IHRvIGxvYWQgYW5kIGl0IHdpbGwgcmV0dXJuIHRoZSBVUkwgZm9yIHRoYXQgY2h1bmsuCi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bmRlZgp2YXIgY2h1bmtBc3NldD1fX3dlYnBhY2tfcmVxdWlyZV9fLmdjYShjaHVua05hbWUpOy8vIEluIHNvbWUgY2FzZXMsIHdlYnBhY2sgbWlnaHQgZGVjaWRlIHRvIG9wdGltaXplIGZ1cnRoZXIgJiBoZW5jZSB0aGUgY2h1bmsgYXNzZXRzIGFyZSBtZXJnZWQgdG8gYW5vdGhlciBjaHVuay9wcmV2aW91cyBjaHVuay4KLy8gSGVuY2UsIHdlIGNhbiBzYWZlbHkgZmlsdGVyIGl0IG91dC9kb24ndCBuZWVkIHRvIGxvYWQgaXQuCmlmKGNodW5rQXNzZXQmJiEvdW5kZWZpbmVkLy50ZXN0KGNodW5rQXNzZXQpKXtwcmVmZXRjaEhlbHBlcihjaHVua0Fzc2V0KTt9fSk7cmV0dXJuIHRydWU7fSxwcmVsb2FkOmZ1bmN0aW9uIHByZWxvYWQocm91dGVQYXRoKXtpZighY2FuUHJlbG9hZChyb3V0ZVBhdGgpKXtyZXR1cm4gZmFsc2U7fWxvYWRlZFtyb3V0ZVBhdGhdPXRydWU7cHJlbG9hZEhlbHBlcihyb3V0ZXMscm91dGVQYXRoKTtyZXR1cm4gdHJ1ZTt9fTtleHBvcnQgZGVmYXVsdCBkb2N1c2F1cnVzOw=="},{"version":3,"sources":["/Users/aloose/mulesoft/a-ml/website/node_modules/@docusaurus/core/lib/client/docusaurus.js"],"names":["matchRoutes","routesChunkNames","routes","prefetchHelper","preloadHelper","flat","fetched","loaded","isSlowConnection","navigator","connection","effectiveType","indexOf","saveData","canPrefetch","routePath","canPreload","flatten","arrays","Array","prototype","concat","apply","removeRouteNameHash","str","replace","getChunkNamesToLoad","path","Object","entries","filter","routeNameWithHash","map","routeChunks","values","docusaurus","prefetch","matches","chunkNamesNeeded","match","route","forEach","chunkName","chunkAsset","__webpack_require__","gca","test","preload"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,GACA,OAASA,WAAT,KAA4B,qBAA5B,CACA,MAAOC,CAAAA,gBAAP,KAA6B,6BAA7B,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,MAAOC,CAAAA,cAAP,KAA2B,YAA3B,CACA,MAAOC,CAAAA,aAAP,KAA0B,WAA1B,CACA,MAAOC,CAAAA,IAAP,KAAiB,QAAjB,CACA,GAAMC,CAAAA,OAAO,CAAG,EAAhB,CACA,GAAMC,CAAAA,MAAM,CAAG,EAAf,CACA,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,EAAM,CAC3B;AACA,GAAI,cAAgBC,CAAAA,SAApB,CAA+B,CAC3B,GAAI,CAACA,SAAS,CAACC,UAAV,CAAqBC,aAArB,IAAD,EAA2CC,OAA3C,SAA6D,CAAC,CAA9D,EACAH,SAAS,CAACC,UAAV,CAAqBG,QADzB,CACmC,CAC/B,MAAO,KAAP,CACH,CACJ,CACD,MAAO,MAAP,CACH,CATD,CAUA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,SAAD,QAAe,CAACP,gBAAgB,EAAjB,EAAuB,CAACD,MAAM,CAACQ,SAAD,CAA9B,EAA6C,CAACT,OAAO,CAACS,SAAD,CAApE,EAApB,CACA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACD,SAAD,QAAe,CAACP,gBAAgB,EAAjB,EAAuB,CAACD,MAAM,CAACQ,SAAD,CAA7C,EAAnB,CACA,GAAME,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,MAAD,QAAYC,CAAAA,KAAK,CAACC,SAAN,CAAgBC,MAAhB,CAAuBC,KAAvB,CAA6B,EAA7B,CAAiCJ,MAAjC,CAAZ,EAAhB,CACA;AACA;AACA;AACA,GAAMK,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,CAACC,GAAD,QAASA,CAAAA,GAAG,CAACC,OAAJ,CAAY,WAAZ,CAAyB,EAAzB,CAAT,EAA5B,CACA,GAAMC,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,CAACC,IAAD,CAAU,CAClC,MAAOV,CAAAA,OAAO,CAACW,MAAM,CAACC,OAAP,CAAe5B,gBAAf,EACV6B,MADU,CACH,kBAAEC,CAAAA,iBAAF,eAAyBR,CAAAA,mBAAmB,CAACQ,iBAAD,CAAnB,GAA2CJ,IAApE,EADG,EAEVK,GAFU,CAEN,eAAqB,IAAjBC,CAAAA,WAAiB,UAC1B;AACA,MAAOL,CAAAA,MAAM,CAACM,MAAP,CAAc7B,IAAI,CAAC4B,WAAD,CAAlB,CAAP,CACH,CALc,CAAD,CAAd,CAMH,CAPD,CAQA,GAAME,CAAAA,UAAU,CAAG,CACfC,QAAQ,CAAE,kBAACrB,SAAD,CAAe,CACrB,GAAI,CAACD,WAAW,CAACC,SAAD,CAAhB,CAA6B,CACzB,MAAO,MAAP,CACH,CACD;AACAT,OAAO,CAACS,SAAD,CAAP,CAAqB,IAArB,CACA;AACA,GAAMsB,CAAAA,OAAO,CAAGrC,WAAW,CAACE,MAAD,CAASa,SAAT,CAA3B,CACA,GAAMuB,CAAAA,gBAAgB,CAAGrB,OAAO,CAACoB,OAAO,CAACL,GAAR,CAAY,SAACO,KAAD,QAAWb,CAAAA,mBAAmB,CAACa,KAAK,CAACC,KAAN,CAAYb,IAAb,CAA9B,EAAZ,CAAD,CAAhC,CACA;AACAW,gBAAgB,CAACG,OAAjB,CAAyB,SAACC,SAAD,CAAe,CACpC;AACA;AACA;AACA,GAAMC,CAAAA,UAAU,CAAGC,mBAAmB,CAACC,GAApB,CAAwBH,SAAxB,CAAnB,CACA;AACA;AACA,GAAIC,UAAU,EAAI,CAAC,YAAYG,IAAZ,CAAiBH,UAAjB,CAAnB,CAAiD,CAC7CxC,cAAc,CAACwC,UAAD,CAAd,CACH,CACJ,CAVD,EAWA,MAAO,KAAP,CACH,CAvBc,CAwBfI,OAAO,CAAE,iBAAChC,SAAD,CAAe,CACpB,GAAI,CAACC,UAAU,CAACD,SAAD,CAAf,CAA4B,CACxB,MAAO,MAAP,CACH,CACDR,MAAM,CAACQ,SAAD,CAAN,CAAoB,IAApB,CACAX,aAAa,CAACF,MAAD,CAASa,SAAT,CAAb,CACA,MAAO,KAAP,CACH,CA/Bc,CAAnB,CAiCA,cAAeoB,CAAAA,UAAf","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { matchRoutes } from 'react-router-config';\nimport routesChunkNames from '@generated/routesChunkNames';\nimport routes from '@generated/routes';\nimport prefetchHelper from './prefetch';\nimport preloadHelper from './preload';\nimport flat from './flat';\nconst fetched = {};\nconst loaded = {};\nconst isSlowConnection = () => {\n    // If user is on slow or constrained connection.\n    if (`connection` in navigator) {\n        if ((navigator.connection.effectiveType || ``).indexOf(`2g`) !== -1 &&\n            navigator.connection.saveData) {\n            return true;\n        }\n    }\n    return false;\n};\nconst canPrefetch = (routePath) => !isSlowConnection() && !loaded[routePath] && !fetched[routePath];\nconst canPreload = (routePath) => !isSlowConnection() && !loaded[routePath];\nconst flatten = (arrays) => Array.prototype.concat.apply([], arrays);\n// Remove the last part containing the route hash\n// input: /blog/2018/12/14/Happy-First-Birthday-Slash-fe9\n// output: /blog/2018/12/14/Happy-First-Birthday-Slash\nconst removeRouteNameHash = (str) => str.replace(/(-[^-]+)$/, '');\nconst getChunkNamesToLoad = (path) => {\n    return flatten(Object.entries(routesChunkNames)\n        .filter(([routeNameWithHash]) => removeRouteNameHash(routeNameWithHash) === path)\n        .map(([, routeChunks]) => {\n        // flat() is useful for nested chunk names, it's not like array.flat()\n        return Object.values(flat(routeChunks));\n    }));\n};\nconst docusaurus = {\n    prefetch: (routePath) => {\n        if (!canPrefetch(routePath)) {\n            return false;\n        }\n        // Prevent future duplicate prefetch of routePath.\n        fetched[routePath] = true;\n        // Find all webpack chunk names needed.\n        const matches = matchRoutes(routes, routePath);\n        const chunkNamesNeeded = flatten(matches.map((match) => getChunkNamesToLoad(match.route.path)));\n        // Prefetch all webpack chunk assets file needed.\n        chunkNamesNeeded.forEach((chunkName) => {\n            // \"__webpack_require__.gca\" is a custom function provided by ChunkAssetPlugin.\n            // Pass it the chunkName or chunkId you want to load and it will return the URL for that chunk.\n            // eslint-disable-next-line no-undef\n            const chunkAsset = __webpack_require__.gca(chunkName);\n            // In some cases, webpack might decide to optimize further & hence the chunk assets are merged to another chunk/previous chunk.\n            // Hence, we can safely filter it out/don't need to load it.\n            if (chunkAsset && !/undefined/.test(chunkAsset)) {\n                prefetchHelper(chunkAsset);\n            }\n        });\n        return true;\n    },\n    preload: (routePath) => {\n        if (!canPreload(routePath)) {\n            return false;\n        }\n        loaded[routePath] = true;\n        preloadHelper(routes, routePath);\n        return true;\n    },\n};\nexport default docusaurus;\n"]}]}