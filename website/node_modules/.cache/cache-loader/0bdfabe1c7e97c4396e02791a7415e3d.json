{"remainingRequest":"/Users/aloose/mulesoft/a-ml/website/node_modules/babel-loader/lib/index.js??ref--11-1!/Users/aloose/mulesoft/a-ml/website/node_modules/@docusaurus/mdx-loader/src/index.js??ref--11-2!/Users/aloose/mulesoft/a-ml/website/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js??ref--11-3!/Users/aloose/mulesoft/a-ml/docs/modularization.mdx","dependencies":[{"path":"/Users/aloose/mulesoft/a-ml/docs/modularization.mdx","mtime":1610720708394},{"path":"/Users/aloose/mulesoft/a-ml/website/.docusaurus/docusaurus-plugin-content-docs/default/site-docs-modularization-mdx-3ef.json","mtime":1610721600898},{"path":"/Users/aloose/mulesoft/a-ml/website/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/aloose/mulesoft/a-ml/website/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/aloose/mulesoft/a-ml/website/node_modules/@docusaurus/mdx-loader/src/index.js","mtime":499162500000},{"path":"/Users/aloose/mulesoft/a-ml/website/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/aloose/mulesoft/a-ml/docs/modularization.mdx"],"names":["React","mdx","frontMatter","id","title","hide_title","metadata","toc","value","children","layoutProps","MDXLayout","MDXContent","components","props","isMDXComponent"],"mappings":"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","sourcesContent":["\n  import React from 'react';\n  import { mdx } from '@mdx-js/react';\n\n  export const frontMatter = {\n\tid: 'modularization',\n\ttitle: 'Modularization',\n\thide_title: true\n};\nexport const metadata = {\n  \"unversionedId\": \"modularization\",\n  \"id\": \"modularization\",\n  \"isDocsHomePage\": false,\n  \"title\": \"Modularization\",\n  \"description\": \"Modularization\",\n  \"source\": \"@site/../docs/modularization.mdx\",\n  \"slug\": \"/modularization\",\n  \"permalink\": \"/docs/modularization\",\n  \"version\": \"current\",\n  \"lastUpdatedBy\": \"Author\",\n  \"lastUpdatedAt\": 1539502055,\n  \"sidebar\": \"docs\",\n  \"previous\": {\n    \"title\": \"AMF project configuration\",\n    \"permalink\": \"/docs/AMF/using-amf/amf_setup\"\n  },\n  \"next\": {\n    \"title\": \"Custom validations\",\n    \"permalink\": \"/docs/custom_validations\"\n  }\n};\n  /* @jsxRuntime classic */\n/* @jsx mdx */\n\nexport const toc = [{\n  value: 'Before you begin',\n  id: 'before-you-begin',\n  children: []\n}, {\n  value: 'Download the example',\n  id: 'download-the-example',\n  children: []\n}, {\n  value: 'Build and install the AMF command-line tool',\n  id: 'build-and-install-the-amf-command-line-tool',\n  children: []\n}, {\n  value: 'Initial stand-alone AML dialect',\n  id: 'initial-stand-alone-aml-dialect',\n  children: []\n}, {\n  value: 'Defining reusable fragments',\n  id: 'defining-reusable-fragments',\n  children: []\n}, {\n  value: 'Libraries of reusable entities',\n  id: 'libraries-of-reusable-entities',\n  children: []\n}, {\n  value: 'Parsing and resolving with AMF',\n  id: 'parsing-and-resolving-with-amf',\n  children: []\n}];\n\nconst layoutProps = {\n  toc\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"modularization\"\n    }}>{`Modularization`}</h1>\n    <p>{`This tutorial shows you how to define and edit reusable, modular metadata documents that can be linked together as a graph of metadata using AML.`}</p>\n    <h2 {...{\n      \"id\": \"before-you-begin\"\n    }}>{`Before you begin`}</h2>\n    <p>{`Prerequisites:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`JVM: version 7 or higher`}</li>\n      <li parentName=\"ul\">{`SBT to build the AMF command-line`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"download-the-example\"\n    }}>{`Download the example`}</h2>\n    <p>{`You can download the example from the AML project `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/aml-org/examples\"\n      }}>{`examples repository`}</a>{` in Github.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`\ngit clone https://github.com/aml-org/examples.git\ncd examples/modular\n\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"build-and-install-the-amf-command-line-tool\"\n    }}>{`Build and install the AMF command-line tool`}</h2>\n    <p>{`This tutorial assumes you have a working version of the AMF command-line as described in the `}<a parentName=\"p\" {...{\n        \"href\": \"/docs/quickstart\"\n      }}>{`quickstart`}</a>{` tutorial.`}</p>\n    <h2 {...{\n      \"id\": \"initial-stand-alone-aml-dialect\"\n    }}>{`Initial stand-alone AML dialect`}</h2>\n    <p>{`In this tutorial, you will split a stand-alone, monolithic AML metadata document into a set of modular documents that can be edited, published and linked independently.`}</p>\n    <p>{`We will start with the initial version of the dialect, found in `}<inlineCode parentName=\"p\">{`aml/modular/dialect/database_configuration.yaml`}</inlineCode>{`, a very simple AML Dialect describing configuration metadata file with information to connect to different databases.`}</p>\n    <p><em parentName=\"p\">{`database_configuration.yaml`}</em></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`\n#%Dialect 1.0\n\ndialect: DB Config\nversion: 1.0\n\nuses:\n  infra: ../vocabulary/infra.yaml\n  cfg: ../vocabulary/config.yaml\n\nexternal:\n  schema-org: http://schema.org/\n  dbconfig: http://mycompany.com/dialects/dbconfig#\n\n\nnodeMappings:\n\n  DatabaseConfigNode:\n    classTerm: cfg.ConfigurationItem\n    mapping:\n      server:\n        propertyTerm: cfg.configured\n        range: DatabaseServerNode\n      dbs:\n        propertyTerm: dbconfig.dbs\n        mapKey: cfg.environment\n        range: DatabaseNode\n\n  DatabaseNode:\n    classTerm: infra.Database\n    mapping:\n      environment:\n        propertyTerm: cfg.environment\n        range: string\n        enum:\n          - development\n          - production\n          - testing\n          - qa\n      name:\n        propertyTerm: schema-org.name\n        range: string\n        mandatory: true\n      username:\n        propertyTerm: cfg.username\n        range: string\n\n  DatabaseServerNode:\n    classTerm: infra.DatabaseServer\n    mapping:\n      host:\n        mandatory: true\n        propertyTerm: infra.endpoint\n        range: string\n      port:\n        mandatory: true\n        propertyTerm: infra.port\n        range: integer\n      driver:\n        mandatory: true\n        propertyTerm: infra.driver\n        range: string\n\ndocuments:\n  root:\n    encodes: DatabaseConfigNode\n\n`}</code></pre>\n    <p>{`This AML dialect uses two vocabularies, one to describe infrastructure, and the other to describe configurations. Both are located in `}<inlineCode parentName=\"p\">{`aml/modular/vocabulary/config.yaml`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`aml/modular/vocabulary/infra.yaml`}</inlineCode>{`.`}</p>\n    <p>{`Since this AML dialect defines a single, monolithic type of document, the `}<inlineCode parentName=\"p\">{`documents`}</inlineCode>{` section of the dialect includes only a `}<inlineCode parentName=\"p\">{`root`}</inlineCode>{` entry encoding the root node of the document.`}</p>\n    <p>{`Using this dialect definition, we can edit standalone configuration documents, like the configuration document located at `}<inlineCode parentName=\"p\">{`aml/modular/db1.yaml`}</inlineCode>{`:`}</p>\n    <p><em parentName=\"p\">{`db1.yaml`}</em></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`\n#%DBConfig 1.0\n\nserver:\n  host: localhost\n  port: 5001\n  driver: mysql\n\ndbs:\n  dev:\n    name: accounts_dev\n    username: jsmith\n  test:\n    name: accounts_test\n    username: jsmith\n\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"defining-reusable-fragments\"\n    }}>{`Defining reusable fragments`}</h2>\n    <p>{`In many situations, entities defined in a document can be reused in multiple documents. AML allows you to define reusable entities in their own independent metadata documents, known as fragments, that can be linked from all these documents. The graph of information parsed from all these documents will point to the same node URI in the generated metadata graph.`}</p>\n    <p>{`To declare a fragment, the `}<inlineCode parentName=\"p\">{`documents`}</inlineCode>{` section of the AML dialect must include a `}<inlineCode parentName=\"p\">{`fragments`}</inlineCode>{` entry with a mapping from the name of the fragment to the node encoded in the fragment.`}</p>\n    <p>{`Version 1.1 of the DB Config dialect introduces a fragment to declare databases servers. It can be found in the `}<inlineCode parentName=\"p\">{`aml/modular/dialect/database_configuration_2.yaml`}</inlineCode>{`.`}</p>\n    <p><em parentName=\"p\">{`database_configuration_2.yaml`}</em></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`\n#%Dialect 1.0\n\ndialect: DB Config\nversion: 1.1\n\n...\n\ndocuments:\n  root:\n    encodes: DatabaseConfigNode\n  fragments:\n    encodes:\n      DatabaseServer: DatabaseServerNode\n\n`}</code></pre>\n    <p>{`In this case, we define a fragment named `}<inlineCode parentName=\"p\">{`DatabaseServer`}</inlineCode>{` encoding a `}<inlineCode parentName=\"p\">{`DatabaseServerNode`}</inlineCode>{`.`}</p>\n    <p>{`With this dialect definition, we can create fragments declaring metadata about database servers with the semantics of the `}<inlineCode parentName=\"p\">{`Infrastructure`}</inlineCode>{` vocabulary, for example in the `}<inlineCode parentName=\"p\">{`aml/modular/server.yaml`}</inlineCode>{`:`}</p>\n    <p><em parentName=\"p\">{`server.yaml`}</em></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`\n#%DatabaseServer / DB Config 1.1\n\nhost: localhost\nport: 5001\ndriver: mysql\n\n`}</code></pre>\n    <p>{`These fragments can be linked from the configuration document, using the `}<inlineCode parentName=\"p\">{`!include`}</inlineCode>{` linking directive:`}</p>\n    <p><em parentName=\"p\">{`db2.yaml`}</em></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`\n#%DB Config 1.1\n\nserver: !include server.yaml\n\ndbs:\n  dev:\n    name: accounts_dev\n    username: jsmith\n  test:\n    name: accounts_test\n    username: jsmith\n\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"libraries-of-reusable-entities\"\n    }}>{`Libraries of reusable entities`}</h2>\n    <p>{`Another common use case is to define related collections of metadata entities that can be reused across different documents.`}</p>\n    <p>{`AML supports these modular collections through the definition of metadata libraries.\nLibraries are defined in the `}<inlineCode parentName=\"p\">{`documents`}</inlineCode>{` section using the `}<inlineCode parentName=\"p\">{`libraries`}</inlineCode>{` property. This node keeps a map of declarations for the library, including name of the declaration and type of declared nodes.`}</p>\n    <p>{`The version 1.2 of the `}<inlineCode parentName=\"p\">{`DB Config`}</inlineCode>{` dialect, located at `}<inlineCode parentName=\"p\">{`aml/modular/dialect/database_configuration_3.yaml`}</inlineCode>{` includes the declaration of libraries of servers:`}</p>\n    <p><em parentName=\"p\">{`database_configuration_3.yaml`}</em></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`\n#%Dialect 1.0\n\ndialect: DB Config\nversion: 1.2\n\n...\n\ndocuments:\n  root:\n    encodes: DatabaseConfigNode\n  fragments:\n    encodes:\n      DatabaseServer: DatabaseServerNode\n  library:\n    declares:\n      servers: DatabaseServerNode\n\n`}</code></pre>\n    <p>{`After these dialect definitions, metadata documents containing libraries of servers can be defined, like the one located at `}<inlineCode parentName=\"p\">{`aml/modular/servers_library.yaml`}</inlineCode>{`:`}</p>\n    <p><em parentName=\"p\">{`servers_library.yaml`}</em></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`\n#%Library / DB Config 1.2\n\nservers:\n\n  local_mysql:\n    host: localhost\n    port: 5001\n    driver: mysql\n\n  local_postgres:\n    host: localhost\n    port: 5432\n    driver: postgres\n\n  production_mysql:\n    host: db.myapp.com\n    port: 9501\n    driver: mysql\n\n`}</code></pre>\n    <p>{`These libraries can be referenced from configuration document using library reference aliases, as in `}<inlineCode parentName=\"p\">{`aml/modular/db3.yaml`}</inlineCode>{`:`}</p>\n    <p><em parentName=\"p\">{`db3.yaml`}</em></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`\n#%DB Config 1.2\n\nuses:\n  servers: servers_library.yaml\n\nserver: servers.local_mysql\n\ndbs:\n  dev:\n    name: accounts_dev\n    username: jsmith\n  test:\n    name: accounts_test\n    username: jsmith\n\n`}</code></pre>\n    <p>{`Instead of library reference aliases, `}<inlineCode parentName=\"p\">{`$ref`}</inlineCode>{` linking directives can also be used, as shown in this example JSON representation of the same metadata:`}</p>\n    <p><em parentName=\"p\">{`db3.json`}</em></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`\n{\n    \"$dialect\": \"DB Config 1.2\",\n    \"server\": { \"$ref\": \"servers_library.yaml#/servers/local_mysql\"},\n    \"dbs\": {\n        \"dev\": {\n            \"name\": \"accounts_dev\",\n            \"username\": \"jsmith\"\n        },\n        \"test\": {\n            \"name\": \"accounts_test\",\n            \"username\": \"jsmith\"\n        }\n    }\n}\n\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"parsing-and-resolving-with-amf\"\n    }}>{`Parsing and resolving with AMF`}</h2>\n    <p>{`AMF can be used to parse modular metadata documents containing links.\nBy default, AMF will produce a JSON-LD document encoding a graph that explicitly links documents using the `}<inlineCode parentName=\"p\">{`doc:link-target`}</inlineCode>{` property. Linked documents will be eagerly followed and added to the `}<inlineCode parentName=\"p\">{`doc:references`}</inlineCode>{` list.`}</p>\n    <p>{`Different types of documents in the graph will be marked with different semantics.`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Fragments will be marked with the `}<inlineCode parentName=\"li\">{`doc:Fragment`}</inlineCode>{` class.`}</li>\n      <li parentName=\"ul\">{`Libraries will be marked with the `}<inlineCode parentName=\"li\">{`doc:Module`}</inlineCode>{` class.`}</li>\n    </ul>\n    <p>{`For example, to parse version 1.1 of the database document using a fragment, AMF can be used:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`\nexamples [master] $ java -jar amf.jar parse -ds file://aml/modular/dialect/database_configuration_2.yaml -in \"AML 1.0\" -mime-in application/yaml -ctx true file://aml/modular/db2.yaml\n[\n  {\n    \"@id\": \"#\",\n    \"@type\": [\n      \"meta:DialectInstance\",\n      \"doc:Document\",\n      \"doc:Fragment\",\n      \"doc:Module\",\n      \"doc:Unit\"\n    ],\n    \"meta:definedBy\": [\n      {\n        \"@id\": \"file://aml/modular/dialect/database_configuration_2.yaml#\"\n      }\n    ],\n    \"doc:encodes\": [\n      {\n        \"@id\": \"#/\",\n        \"@type\": [\n          \"http://mycompany.com/vocabularies/config#ConfigurationItem\",\n          \"file://aml/modular/dialect/database_configuration_2.yaml#/declarations/DatabaseConfigNode\",\n          \"meta:DialectDomainElement\",\n          \"doc:DomainElement\"\n        ],\n        \"http://mycompany.com/vocabularies/config#configured\": [\n          {\n            \"@id\": \"#/server\",\n            \"@type\": [\n              \"http://mycompany.com/vocabularies/infra#DatabaseServer\",\n              \"file://aml/modular/dialect/database_configuration_2.yaml#/declarations/DatabaseServerNode\",\n              \"meta:DialectDomainElement\",\n              \"doc:DomainElement\"\n            ],\n            \"doc:link-target\": [\n              {\n                \"@id\": \"file://aml/modular/server.yaml#/\"\n              }\n            ],\n            \"doc:link-label\": [\n              {\n                \"@value\": \"server.yaml\"\n              }\n            ]\n          }\n        ],\n        \"http://mycompany.com/dialects/dbconfig#dbs\": [\n         ...\n        ]\n      }\n    ],\n    \"doc:references\": [\n      {\n        \"@id\": \"file://aml/modular/server.yaml#\",\n        \"@type\": [\n          \"meta:DialectInstanceFragment\",\n          \"doc:Fragment\",\n          \"doc:Unit\"\n        ],\n        \"meta:definedBy\": [\n          {\n            \"@id\": \"file://aml/modular/dialect/database_configuration_2.yaml#\"\n          }\n        ],\n        \"doc:encodes\": [\n          {\n            \"@id\": \"file://aml/modular/server.yaml#/\",\n            \"@type\": [\n              \"http://mycompany.com/vocabularies/infra#DatabaseServer\",\n              \"file://aml/modular/dialect/database_configuration_2.yaml#/declarations/DatabaseServerNode\",\n              \"meta:DialectDomainElement\",\n              \"doc:DomainElement\"\n            ],\n            \"http://mycompany.com/vocabularies/infra#driver\": [\n              {\n                \"@value\": \"mysql\"\n              }\n            ],\n            \"http://mycompany.com/vocabularies/infra#endpoint\": [\n              {\n                \"@value\": \"localhost\"\n              }\n            ],\n            \"http://mycompany.com/vocabularies/infra#port\": [\n              {\n                \"@value\": 5001\n              }\n            ]\n          }\n        ]\n      }\n    ],\n    \"@context\": {\n      \"@base\": \"file://aml/modular/db2.yaml\",\n      \"doc\": \"http://a.ml/vocabularies/document#\",\n      \"meta\": \"http://a.ml/vocabularies/meta#\",\n      \"schema-org\": \"http://schema.org/\"\n    }\n  }\n]\n\n`}</code></pre>\n    <p>{`Sometimes, we want to work with the final graph of metadata in which all explicit links have been replaced by standard JSON-LD links. In the process, all the `}<inlineCode parentName=\"p\">{`doc:references`}</inlineCode>{` relationships disappear and a single unit is generated. This process is known as `}<inlineCode parentName=\"p\">{`resolution`}</inlineCode>{` in AMF.`}</p>\n    <p>{`You can trigger the resolution process in AMF programmatically or by passing the `}<inlineCode parentName=\"p\">{`--resolve true`}</inlineCode>{` argument to the command line tool:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`\nexamples [master] $ java -jar amf.jar parse -ds file://aml/modular/dialect/database_configuration_2.yaml -in \"AML 1.0\" -mime-in application/yaml -ctx true --resolve true file://aml/modular/db2.yaml\n[\n  {\n    \"@id\": \"#\",\n    \"@type\": [\n      \"meta:DialectInstance\",\n      \"doc:Document\",\n      \"doc:Fragment\",\n      \"doc:Module\",\n      \"doc:Unit\"\n    ],\n    \"meta:definedBy\": [\n      {\n        \"@id\": \"file://aml/modular/dialect/database_configuration_2.yaml#\"\n      }\n    ],\n    \"doc:encodes\": [\n      {\n        \"@id\": \"#/\",\n        \"@type\": [\n          \"http://mycompany.com/vocabularies/config#ConfigurationItem\",\n          \"file://aml/modular/dialect/database_configuration_2.yaml#/declarations/DatabaseConfigNode\",\n          \"meta:DialectDomainElement\",\n          \"doc:DomainElement\"\n        ],\n        \"http://mycompany.com/vocabularies/config#configured\": [\n          {\n            \"@id\": \"file://aml/modular/server.yaml#/\",\n            \"@type\": [\n              \"http://mycompany.com/vocabularies/infra#DatabaseServer\",\n              \"file://aml/modular/dialect/database_configuration_2.yaml#/declarations/DatabaseServerNode\",\n              \"meta:DialectDomainElement\",\n              \"doc:DomainElement\"\n            ],\n            \"http://mycompany.com/vocabularies/infra#driver\": [\n              {\n                \"@value\": \"mysql\"\n              }\n            ],\n            \"http://mycompany.com/vocabularies/infra#endpoint\": [\n              {\n                \"@value\": \"localhost\"\n              }\n            ],\n            \"http://mycompany.com/vocabularies/infra#port\": [\n              {\n                \"@value\": 5001\n              }\n            ]\n          }\n        ],\n        \"http://mycompany.com/dialects/dbconfig#dbs\": [\n          {\n            \"@id\": \"#/dbs/dev\",\n            \"@type\": [\n              \"http://mycompany.com/vocabularies/infra#Database\",\n              \"file://aml/modular/dialect/database_configuration_2.yaml#/declarations/DatabaseNode\",\n              \"meta:DialectDomainElement\",\n              \"doc:DomainElement\"\n            ],\n            \"schema-org:name\": [\n              {\n                \"@value\": \"accounts_dev\"\n              }\n            ],\n            \"http://mycompany.com/vocabularies/config#username\": [\n              {\n                \"@value\": \"jsmith\"\n              }\n            ],\n            \"http://mycompany.com/vocabularies/config#environment\": [\n              {\n                \"@value\": \"dev\"\n              }\n            ]\n          },\n          {\n            \"@id\": \"#/dbs/test\",\n            \"@type\": [\n              \"http://mycompany.com/vocabularies/infra#Database\",\n              \"file://aml/modular/dialect/database_configuration_2.yaml#/declarations/DatabaseNode\",\n              \"meta:DialectDomainElement\",\n              \"doc:DomainElement\"\n            ],\n            \"schema-org:name\": [\n              {\n                \"@value\": \"accounts_test\"\n              }\n            ],\n            \"http://mycompany.com/vocabularies/config#username\": [\n              {\n                \"@value\": \"jsmith\"\n              }\n            ],\n            \"http://mycompany.com/vocabularies/config#environment\": [\n              {\n                \"@value\": \"test\"\n              }\n            ]\n          }\n        ]\n      }\n    ],\n    \"@context\": {\n      \"@base\": \"file://aml/modular/db2.yaml\",\n      \"doc\": \"http://a.ml/vocabularies/document#\",\n      \"meta\": \"http://a.ml/vocabularies/meta#\",\n      \"schema-org\": \"http://schema.org/\"\n    }\n  }\n]\n\n`}</code></pre>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n  "]}]}