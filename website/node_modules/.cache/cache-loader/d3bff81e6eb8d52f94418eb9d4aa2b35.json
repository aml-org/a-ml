{"remainingRequest":"/Users/aloose/mulesoft/a-ml/website/node_modules/babel-loader/lib/index.js??ref--8-1!/Users/aloose/mulesoft/a-ml/website/node_modules/@docusaurus/theme-classic/lib-next/theme/CodeBlock/index.js","dependencies":[{"path":"/Users/aloose/mulesoft/a-ml/website/node_modules/@docusaurus/theme-classic/lib-next/theme/CodeBlock/index.js","mtime":499162500000},{"path":"/Users/aloose/mulesoft/a-ml/website/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/aloose/mulesoft/a-ml/website/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/aloose/mulesoft/a-ml/website/node_modules/@docusaurus/theme-classic/lib-next/theme/CodeBlock/index.js"],"names":["React","useEffect","useState","useRef","clsx","Highlight","defaultProps","copy","rangeParser","usePrismTheme","styles","useThemeConfig","highlightLinesRangeRegex","getHighlightDirectiveRegex","languages","comments","js","start","end","jsBlock","jsx","python","html","directives","join","commentPattern","map","lang","RegExp","highlightDirectiveRegex","codeBlockTitleRegex","children","languageClassName","className","metastring","prism","showCopied","setShowCopied","mounted","setMounted","button","highlightLines","codeBlockTitle","prismTheme","content","Array","isArray","test","highlightLinesRange","match","filter","n","language","replace","defaultLanguage","code","length","undefined","range","directiveRegex","lines","split","blockStart","index","line","lineNumber","directive","slice","reduce","final","item","splice","handleCopyCode","setTimeout","String","style","tokens","getLineProps","getTokenProps","codeBlockContent","codeBlock","codeBlockWithTitle","codeBlockLines","i","lineProps","key","includes","token","copyButton"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React, { useEffect, useState, useRef } from 'react';\nimport clsx from 'clsx';\nimport Highlight, { defaultProps } from 'prism-react-renderer';\nimport copy from 'copy-text-to-clipboard';\nimport rangeParser from 'parse-numeric-range';\nimport usePrismTheme from '@theme/hooks/usePrismTheme';\nimport styles from './styles.module.css';\nimport { useThemeConfig } from '@docusaurus/theme-common';\nconst highlightLinesRangeRegex = /{([\\d,-]+)}/;\n\nconst getHighlightDirectiveRegex = (languages = ['js', 'jsBlock', 'jsx', 'python', 'html']) => {\n  // supported types of comments\n  const comments = {\n    js: {\n      start: '\\\\/\\\\/',\n      end: ''\n    },\n    jsBlock: {\n      start: '\\\\/\\\\*',\n      end: '\\\\*\\\\/'\n    },\n    jsx: {\n      start: '\\\\{\\\\s*\\\\/\\\\*',\n      end: '\\\\*\\\\/\\\\s*\\\\}'\n    },\n    python: {\n      start: '#',\n      end: ''\n    },\n    html: {\n      start: '<!--',\n      end: '-->'\n    }\n  }; // supported directives\n\n  const directives = ['highlight-next-line', 'highlight-start', 'highlight-end'].join('|'); // to be more reliable, the opening and closing comment must match\n\n  const commentPattern = languages.map(lang => `(?:${comments[lang].start}\\\\s*(${directives})\\\\s*${comments[lang].end})`).join('|'); // white space is allowed, but otherwise it should be on it's own line\n\n  return new RegExp(`^\\\\s*(?:${commentPattern})\\\\s*$`);\n}; // select comment styles based on language\n\n\nconst highlightDirectiveRegex = lang => {\n  switch (lang) {\n    case 'js':\n    case 'javascript':\n    case 'ts':\n    case 'typescript':\n      return getHighlightDirectiveRegex(['js', 'jsBlock']);\n\n    case 'jsx':\n    case 'tsx':\n      return getHighlightDirectiveRegex(['js', 'jsBlock', 'jsx']);\n\n    case 'html':\n      return getHighlightDirectiveRegex(['js', 'jsBlock', 'html']);\n\n    case 'python':\n    case 'py':\n      return getHighlightDirectiveRegex(['python']);\n\n    default:\n      // all comment types\n      return getHighlightDirectiveRegex();\n  }\n};\n\nconst codeBlockTitleRegex = /(?:title=\")(.*)(?:\")/;\nexport default (({\n  children,\n  className: languageClassName,\n  metastring\n}) => {\n  const {\n    prism\n  } = useThemeConfig();\n  const [showCopied, setShowCopied] = useState(false);\n  const [mounted, setMounted] = useState(false); // The Prism theme on SSR is always the default theme but the site theme\n  // can be in a different mode. React hydration doesn't update DOM styles\n  // that come from SSR. Hence force a re-render after mounting to apply the\n  // current relevant styles. There will be a flash seen of the original\n  // styles seen using this current approach but that's probably ok. Fixing\n  // the flash will require changing the theming approach and is not worth it\n  // at this point.\n\n  useEffect(() => {\n    setMounted(true);\n  }, []);\n  const button = useRef(null);\n  let highlightLines = [];\n  let codeBlockTitle = '';\n  const prismTheme = usePrismTheme(); // In case interleaved Markdown (e.g. when using CodeBlock as standalone component).\n\n  const content = Array.isArray(children) ? children.join('') : children;\n\n  if (metastring && highlightLinesRangeRegex.test(metastring)) {\n    // Tested above\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const highlightLinesRange = metastring.match(highlightLinesRangeRegex)[1];\n    highlightLines = rangeParser(highlightLinesRange).filter(n => n > 0);\n  }\n\n  if (metastring && codeBlockTitleRegex.test(metastring)) {\n    // Tested above\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    codeBlockTitle = metastring.match(codeBlockTitleRegex)[1];\n  }\n\n  let language = languageClassName && // Force Prism's language union type to `any` because it does not contain all available languages\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  languageClassName.replace(/language-/, '');\n\n  if (!language && prism.defaultLanguage) {\n    language = prism.defaultLanguage;\n  } // only declaration OR directive highlight can be used for a block\n\n\n  let code = content.replace(/\\n$/, '');\n\n  if (highlightLines.length === 0 && language !== undefined) {\n    let range = '';\n    const directiveRegex = highlightDirectiveRegex(language); // go through line by line\n\n    const lines = content.replace(/\\n$/, '').split('\\n');\n    let blockStart; // loop through lines\n\n    for (let index = 0; index < lines.length;) {\n      const line = lines[index]; // adjust for 0-index\n\n      const lineNumber = index + 1;\n      const match = line.match(directiveRegex);\n\n      if (match !== null) {\n        const directive = match.slice(1).reduce((final, item) => final || item, undefined);\n\n        switch (directive) {\n          case 'highlight-next-line':\n            range += `${lineNumber},`;\n            break;\n\n          case 'highlight-start':\n            blockStart = lineNumber;\n            break;\n\n          case 'highlight-end':\n            range += `${blockStart}-${lineNumber - 1},`;\n            break;\n\n          default:\n            break;\n        }\n\n        lines.splice(index, 1);\n      } else {\n        // lines without directives are unchanged\n        index += 1;\n      }\n    }\n\n    highlightLines = rangeParser(range);\n    code = lines.join('\\n');\n  }\n\n  const handleCopyCode = () => {\n    copy(code);\n    setShowCopied(true);\n    setTimeout(() => setShowCopied(false), 2000);\n  };\n\n  return <Highlight {...defaultProps} key={String(mounted)} theme={prismTheme} code={code} language={language}>\n      {({\n      className,\n      style,\n      tokens,\n      getLineProps,\n      getTokenProps\n    }) => <>\n          {codeBlockTitle && <div style={style} className={styles.codeBlockTitle}>\n              {codeBlockTitle}\n            </div>}\n          <div className={styles.codeBlockContent}>\n            <div\n        /* eslint-disable-next-line jsx-a11y/no-noninteractive-tabindex */\n        tabIndex={0} className={clsx(className, styles.codeBlock, 'thin-scrollbar', {\n          [styles.codeBlockWithTitle]: codeBlockTitle\n        })}>\n              <div className={styles.codeBlockLines} style={style}>\n                {tokens.map((line, i) => {\n              if (line.length === 1 && line[0].content === '') {\n                line[0].content = '\\n'; // eslint-disable-line no-param-reassign\n              }\n\n              const lineProps = getLineProps({\n                line,\n                key: i\n              });\n\n              if (highlightLines.includes(i + 1)) {\n                lineProps.className = `${lineProps.className} docusaurus-highlight-code-line`;\n              }\n\n              return <div key={i} {...lineProps}>\n                      {line.map((token, key) => <span key={key} {...getTokenProps({\n                  token,\n                  key\n                })} />)}\n                    </div>;\n            })}\n              </div>\n            </div>\n\n            <button ref={button} type=\"button\" aria-label=\"Copy code to clipboard\" className={clsx(styles.copyButton)} onClick={handleCopyCode}>\n              {showCopied ? 'Copied' : 'Copy'}\n            </button>\n          </div>\n        </>}\n    </Highlight>;\n});"]}]}