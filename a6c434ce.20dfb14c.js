(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{109:function(e,t,r){"use strict";r.d(t,"a",(function(){return b})),r.d(t,"b",(function(){return d}));var n=r(0),a=r.n(n);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function c(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?c(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):c(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=a.a.createContext({}),u=function(e){var t=a.a.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},b=function(e){var t=u(e.components);return a.a.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},m=a.a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,c=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),b=u(r),m=n,d=b["".concat(c,".").concat(m)]||b[m]||p[m]||o;return r?a.a.createElement(d,l(l({ref:t},s),{},{components:r})):a.a.createElement(d,l({ref:t},s))}));function d(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,c=new Array(o);c[0]=m;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l.mdxType="string"==typeof e?e:n,c[1]=l;for(var s=2;s<o;s++)c[s]=r[s];return a.a.createElement.apply(null,c)}return a.a.createElement.apply(null,r)}m.displayName="MDXCreateElement"},113:function(e,t,r){"use strict";var n=r(0),a=r.n(n),o=r(117),c=r(110),l=r(54),i=r.n(l),s=37,u=39;t.a=function(e){var t=e.lazy,r=e.block,l=e.defaultValue,b=e.values,p=e.groupId,m=e.className,d=Object(o.a)(),f=d.tabGroupChoices,j=d.setTabGroupChoices,O=Object(n.useState)(l),h=O[0],v=O[1],N=n.Children.toArray(e.children);if(null!=p){var y=f[p];null!=y&&y!==h&&b.some((function(e){return e.value===y}))&&v(y)}var g=function(e){v(e),null!=p&&j(p,e)},w=[];return a.a.createElement("div",null,a.a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:Object(c.a)("tabs",{"tabs--block":r},m)},b.map((function(e){var t=e.value,r=e.label;return a.a.createElement("li",{role:"tab",tabIndex:0,"aria-selected":h===t,className:Object(c.a)("tabs__item",i.a.tabItem,{"tabs__item--active":h===t}),key:t,ref:function(e){return w.push(e)},onKeyDown:function(e){!function(e,t,r){switch(r.keyCode){case u:!function(e,t){var r=e.indexOf(t)+1;e[r]?e[r].focus():e[0].focus()}(e,t);break;case s:!function(e,t){var r=e.indexOf(t)-1;e[r]?e[r].focus():e[e.length-1].focus()}(e,t)}}(w,e.target,e)},onFocus:function(){return g(t)},onClick:function(){g(t)}},r)}))),t?Object(n.cloneElement)(N.filter((function(e){return e.props.value===h}))[0],{className:"margin-vert--md"}):a.a.createElement("div",{className:"margin-vert--md"},N.map((function(e,t){return Object(n.cloneElement)(e,{key:t,hidden:e.props.value!==h})}))))}},114:function(e,t,r){"use strict";var n=r(3),a=r(0),o=r.n(a);t.a=function(e){var t=e.children,r=e.hidden,a=e.className;return o.a.createElement("div",Object(n.a)({role:"tabpanel"},{hidden:r,className:a}),t)}},115:function(e,t,r){"use strict";var n=r(4),a=r(0),o=r.n(a),c=r(119),l=function(e){function t(t){var r;return(r=e.call(this,t)||this).state={code:"",lineStart:0,lineEnd:0},r}Object(n.a)(t,e);var r=t.prototype;return r.componentDidMount=function(){var e=this;fetch("https://raw.githubusercontent.com/aml-org/"+this.props.codeUrl).then((function(e){return e.text()})).then((function(t){var r=t,n=e.props.lineStart,a=e.props.lineEnd;a-n>0&&(r=r.split("\n").slice(n,a).join("\n")),e.setState({code:r})})).catch((function(e){return console.error(e)}))},r.render=function(){return o.a.createElement(c.a,{className:this.props.language},this.state.code)},t}(a.Component);t.a=l},91:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return s})),r.d(t,"metadata",(function(){return u})),r.d(t,"toc",(function(){return b})),r.d(t,"default",(function(){return m}));var n=r(3),a=r(7),o=(r(0),r(109)),c=r(113),l=r(114),i=r(115),s={id:"resource_loaders",title:"Custom resource loaders"},u={unversionedId:"custom/resource_loaders",id:"custom/resource_loaders",isDocsHomePage:!1,title:"Custom resource loaders",description:"AMF allows you to define custom resource loaders that you can fully customize and plug into AMF\u2019s parsers.",source:"@site/../docs/custom/resource-loaders.mdx",slug:"/custom/resource_loaders",permalink:"/docs/custom/resource_loaders",version:"current",lastUpdatedBy:"arielmirra",lastUpdatedAt:1615218606,sidebar:"docs",previous:{title:"AML Specification",permalink:"/docs/AML/aml_spec"},next:{title:"How to validate payloads",permalink:"/docs/other/payload_validation"}},b=[{value:"How to implement a new resource loader",id:"how-to-implement-a-new-resource-loader",children:[]},{value:"How to configure your custom resource loader",id:"how-to-configure-your-custom-resource-loader",children:[]},{value:"How URI normalization works",id:"how-uri-normalization-works",children:[{value:"Example URI normalization",id:"example-uri-normalization",children:[]}]},{value:"Example code for a custom resource loader",id:"example-code-for-a-custom-resource-loader",children:[]}],p={toc:b};function m(e){var t=e.components,r=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(n.a)({},p,r,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"AMF allows you to define custom resource loaders that you can fully customize and plug into AMF\u2019s parsers."),Object(o.b)("p",null,"By default, AMF provides the following resource loaders:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"JVM",Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"FileResourceLoader")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"HttpResourceLoader")))),Object(o.b)("li",{parentName:"ul"},"JS Server",Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"JsServerFileResourceLoader")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"JsServerHttpResourceLoader")))),Object(o.b)("li",{parentName:"ul"},"JS Browser",Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"JsBrowserHttpResourceLoader"))))),Object(o.b)("p",null,"However, you may encounter situations in which you need to parse resources that can't be fetched by a HTTP or file resource loader.\nOr you may have cases where you want to use a custom nomenclature or resolution mechanism for the URIs used to reference content."),Object(o.b)("p",null,"In such cases, use custom resource loaders."),Object(o.b)("h2",{id:"how-to-implement-a-new-resource-loader"},"How to implement a new resource loader"),Object(o.b)("p",null,"To implement a new resource loader, extend the ",Object(o.b)("inlineCode",{parentName:"p"},"amf.client.resource.ResourceLoader")," interface and define your own resource loader."),Object(o.b)("p",null,"The ResourceLoader interface contains two methods, ",Object(o.b)("inlineCode",{parentName:"p"},"fetch")," and ",Object(o.b)("inlineCode",{parentName:"p"},"accepts"),":"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-scala",metastring:'title="amf.client.resource.ResourceLoader.scala"',title:'"amf.client.resource.ResourceLoader.scala"'}),"  /** Fetch specified resource and return associated content. Resource should have been previously accepted. */\n  /** If the resource not exists, you should return a future failed with an ResourceNotFound exception. */\n  def fetch(resource: String): ClientFuture[Content]\n\n  /** Accepts specified resource. */\n  def accepts(resource: String): Boolean = true\n")),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},Object(o.b)("inlineCode",{parentName:"p"},"accepts(resource: string): boolean")),Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},"AMF uses this method to ask every resource loader in the environment if it can fetch the current resource.\nIf a loader can't fetch the resource, AMF raises an ",Object(o.b)("inlineCode",{parentName:"li"},"UnsupportedUrlScheme")," exception."))),Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},Object(o.b)("inlineCode",{parentName:"p"},"fetch(resource: string): ClientFuture[Content]")),Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},"This method loads the resource according to your custom implementation, and returns an asynchronous ",Object(o.b)("inlineCode",{parentName:"li"},"Content")," object.")))),Object(o.b)("p",null,"AMF stores the ",Object(o.b)("inlineCode",{parentName:"p"},"Content")," object at ",Object(o.b)("inlineCode",{parentName:"p"},"amf.client.remote.Content"),", and it contains:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"The resource fetched as a stream"),Object(o.b)("li",{parentName:"ul"},"The URL from which the resource was fetched"),Object(o.b)("li",{parentName:"ul"},"The ",Object(o.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types"}),"media type")," of the resource")),Object(o.b)("h2",{id:"how-to-configure-your-custom-resource-loader"},"How to configure your custom resource loader"),Object(o.b)("p",null,"All parsers receive an optional ",Object(o.b)("inlineCode",{parentName:"p"},"Environment")," parameter in their constructor.\nYou can use the ",Object(o.b)("inlineCode",{parentName:"p"},"Environment")," parameter to add your custom resource loaders:"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java",metastring:'title="CustomResourceLoader.java"',title:'"CustomResourceLoader.java"'}),"Environment env = DefaultEnvironment.apply().add(new CustomResourceLoader());\nRaml10Parser parser = new Raml10Parser(env);\n")),Object(o.b)("h2",{id:"how-uri-normalization-works"},"How URI normalization works"),Object(o.b)("p",null,"Before fetching, every URI goes through a ",Object(o.b)("strong",{parentName:"p"},"normalization")," process to ensure consistency and standardization.\nNormalization includes the following steps:"),Object(o.b)("ol",null,Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},Object(o.b)("strong",{parentName:"p"},"Encode string"),": Computes a new version of the string in which each instance of certain characters is replaced by one, two, three, or four escape sequences representing UTF-8 character encoding.")),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},Object(o.b)("strong",{parentName:"p"},"Normalization (",Object(o.b)("inlineCode",{parentName:"strong"},"java.net.URI.normalize"),")"),": Transforms a URI into a normalized, or canonical, URI to determine if two syntactically different URIs are equivalent.")),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},Object(o.b)("strong",{parentName:"p"},"Resolve relativeness"),": If a URI is relative, appends the location of the file from which the URI originates to the base of the processed relative URI."))),Object(o.b)("h3",{id:"example-uri-normalization"},"Example URI normalization"),Object(o.b)("p",null,"The following example demonstrates the normalization process using a RAML API that references an external JSON file:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"URI of main RAML API: ",Object(o.b)("inlineCode",{parentName:"li"},"file:///Users/user/api.raml")),Object(o.b)("li",{parentName:"ul"},"Reference to JSON file: ",Object(o.b)("inlineCode",{parentName:"li"},"type: !include ./folder/../external file.json"))),Object(o.b)("p",null,"The URI is normalized following the three steps described above:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Encode string"),Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},"The URI is transformed to ",Object(o.b)("inlineCode",{parentName:"li"},"./folder/../external%20file.json"),". The blank space between words is encoded."))),Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Normalization"),Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},"The relative path and folder structure are removed, the URI is transformed to ",Object(o.b)("inlineCode",{parentName:"li"},"external%20file.json"),"."))),Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Resolve relativeness"),Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},"The reference was relative, so the URI of the main file is appended to the base of the reference URI: ",Object(o.b)("inlineCode",{parentName:"li"},"file:///Users/user/external%20file.json"))))),Object(o.b)("p",null,"Finally, resource loaders will use the following normalized URI to fetch the JSON file: ",Object(o.b)("inlineCode",{parentName:"p"},"file:///Users/user/external%20file.json"),"."),Object(o.b)("h2",{id:"example-code-for-a-custom-resource-loader"},"Example code for a custom resource loader"),Object(o.b)("p",null,"The following example code is for a custom resource loader that obtains resources using a custom protocol:"),Object(o.b)(c.a,{groupId:"languages",defaultValue:"java",values:[{label:"Java",value:"java"},{label:"JavaScript",value:"js"}],mdxType:"Tabs"},Object(o.b)(l.a,{value:"java",mdxType:"TabItem"},Object(o.b)(i.a,{language:"java",codeUrl:"examples/new-doc/src/test/java/ResourceLoaderTest.java",mdxType:"CodeGetter"})),Object(o.b)(l.a,{value:"js",mdxType:"TabItem"},Object(o.b)(i.a,{language:"js",codeUrl:"examples/new-doc/src/test/js/resource-loader.test.js",mdxType:"CodeGetter"}))))}m.isMDXComponent=!0}}]);