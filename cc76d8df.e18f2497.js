(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{98:function(e,i,t){"use strict";t.r(i),t.d(i,"frontMatter",(function(){return r})),t.d(i,"metadata",(function(){return s})),t.d(i,"toc",(function(){return l})),t.d(i,"default",(function(){return c}));var n=t(3),a=t(7),o=(t(110),t(111)),r={id:"amf_initialization",title:"AMF initialization"},s={unversionedId:"AMF/using-amf/amf_initialization",id:"AMF/using-amf/amf_initialization",isDocsHomePage:!1,title:"AMF initialization",description:"As you've read in the Code Setup of the previous section, the method AMF.init() initializes AMF and gets it ready to work.",source:"@site/../docs/AMF/using-amf/initialization.mdx",slug:"/AMF/using-amf/amf_initialization",permalink:"/docs/AMF/using-amf/amf_initialization",version:"current",lastUpdatedBy:"arielmirra",lastUpdatedAt:1613661878,sidebar:"docs",previous:{title:"AMF project configuration",permalink:"/docs/AMF/using-amf/amf_setup"},next:{title:"Parsing with AMF",permalink:"/docs/AMF/using-amf/amf_parsing"}},l=[],u={toc:l};function c(e){var i=e.components,t=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(n.a)({},u,t,{components:i,mdxType:"MDXLayout"}),Object(o.b)("p",null,"As you've read in the ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/AMF/using-amf/amf_setup#code-setup"}),"Code Setup")," of the previous section, the method ",Object(o.b)("inlineCode",{parentName:"p"},"AMF.init()")," initializes AMF and gets it ready to work.\nIn this section you'll learn how the method works and what are the ",Object(o.b)("strong",{parentName:"p"},"different ways of initializing AMF")," depending on your use case."),Object(o.b)("p",null,"The initialization method registers the following plugins:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"WebApi"),Object(o.b)("li",{parentName:"ul"},"Vocabularies"),Object(o.b)("li",{parentName:"ul"},"AMFCustomValidation"),Object(o.b)("li",{parentName:"ul"},"PayloadValidatorPlugin")),Object(o.b)("p",null,"The ",Object(o.b)("inlineCode",{parentName:"p"},"AMF.init()")," method initializes the core functions of AMF by running ",Object(o.b)("inlineCode",{parentName:"p"},"amf.Core.init()"),", as show in the following snippet:"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-scala",metastring:'title="AMF.scala"',title:'"AMF.scala"'}),"def init(executionEnvironment: BaseExecutionEnvironment): ClientFuture[Unit] = {\n    WebApi.register(executionEnvironment)\n    Vocabularies.register()\n    AMFCustomValidation.register()\n    amf.Core.registerPlugin(PayloadValidatorPlugin)\n    amf.Core.init(executionEnvironment)\n}\n")),Object(o.b)("p",null,"Knowing this, you can cherry-pick and use only the plugins you need. For example, if you wanted to parse and resolve the OAS 3.0 specification,\nyou would need only the WebApi plugin:"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"WebApi.register();\nCore.init().get();\n")),Object(o.b)("p",null,"For more information on parsing, see ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/AMF/using-amf/amf_parsing"}),Object(o.b)("strong",{parentName:"a"},"Parsing with AMF")),"."))}c.isMDXComponent=!0}}]);