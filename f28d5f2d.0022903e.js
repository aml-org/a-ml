(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{102:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return s})),a.d(t,"metadata",(function(){return b})),a.d(t,"toc",(function(){return p})),a.d(t,"default",(function(){return m}));var n=a(3),r=a(7),i=(a(0),a(109)),o=a(113),c=a(114),l=a(115),s={id:"amf_parsing",title:"Parsing with AMF"},b={unversionedId:"AMF/using-amf/amf_parsing",id:"AMF/using-amf/amf_parsing",isDocsHomePage:!1,title:"Parsing with AMF",description:"AMF can parse AML dialects and the following API specifications:",source:"@site/../docs/AMF/using-amf/parsing.mdx",slug:"/AMF/using-amf/amf_parsing",permalink:"/docs/AMF/using-amf/amf_parsing",version:"current",lastUpdatedBy:"arielmirra",lastUpdatedAt:1613661878,sidebar:"docs",previous:{title:"AMF initialization",permalink:"/docs/AMF/using-amf/amf_initialization"},next:{title:"Resolution",permalink:"/docs/AMF/using-amf/amf_resolution"}},p=[{value:"Parsing Basics",id:"parsing-basics",children:[]},{value:"Parsing code examples",id:"parsing-code-examples",children:[]}],u={toc:p};function m(e){var t=e.components,s=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(n.a)({},u,s,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,"AMF can parse ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"https://aml-org.github.io/aml-spec/dialects"}),Object(i.b)("strong",{parentName:"a"},"AML dialects"))," and the following API specifications:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"https://github.com/raml-org/raml-spec/blob/master/versions/raml-08/raml-08.md"}),Object(i.b)("strong",{parentName:"a"},"RAML 0.8"))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"https://github.com/raml-org/raml-spec/blob/master/versions/raml-10/raml-10.md"}),Object(i.b)("strong",{parentName:"a"},"RAML 1.0"))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md"}),Object(i.b)("strong",{parentName:"a"},"OAS 2.0"))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.3.md"}),Object(i.b)("strong",{parentName:"a"},"OAS 3.0"))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"https://github.com/asyncapi/asyncapi/blob/master/versions/2.0.0/asyncapi.md"}),Object(i.b)("strong",{parentName:"a"},"AsyncAPI 2.0")))),Object(i.b)("p",null,"The following section explains the basics of parsing, and the example shows how to parse each specification in Java or JavaScript."),Object(i.b)("h2",{id:"parsing-basics"},"Parsing Basics"),Object(i.b)("p",null,"Parsing is the process of analyzing a sequence of tokens and then building a data structure from them."),Object(i.b)("p",null,"AMF uses ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/aml-org/syaml"}),"SYAML")," to read a JSON or YAML file and generates an ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"https://en.wikipedia.org/wiki/Abstract_syntax_tree"}),Object(i.b)("strong",{parentName:"a"},"abstract syntax tree"))," (AST)\nfrom the file, which is later used to generate a graph that represents the model.\nThe model can be either a Web API model (representing an API, independent of its specification), or an AML document model (a dialect, vocabulary, or dialect instance)."),Object(i.b)("p",null,"Parsing returns a ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/aml-org/amf/blob/develop/documentation/model.md#baseunit"}),"BaseUnit")," object, which is a graph of the model.\nDepending on the content in the parsed file, the BaseUnit object can be a ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/aml-org/amf/blob/develop/documentation/model.md#fragment"}),"Fragment"),", a ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/aml-org/amf/blob/develop/documentation/model.md#module"}),"Module"),",\na ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/aml-org/amf/blob/develop/documentation/model.md#document"}),"Document")," or another type."),Object(i.b)("p",null,"For more information about the AMF model, see the ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/AMF/using-amf/amf_model"}),"AMF model documentation")," resource."),Object(i.b)("p",null,"The following figure shows the parsing process:"),Object(i.b)("p",null,Object(i.b)("img",{alt:"parsing graph",src:a(225).default})),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"SYAML is used to generate an AST from a YAML/JSON file"),Object(i.b)("li",{parentName:"ul"},"AMF uses the AST to generate a graph of the model, called BaseUnit",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"This model will be used in the following stages of AMF (resolution, validation, emission)")))),Object(i.b)("h2",{id:"parsing-code-examples"},"Parsing code examples"),Object(i.b)("p",null,"The file paths you give the parser must have the following structure:"),Object(i.b)("p",null,"Windows:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Absolute path: ",Object(i.b)("inlineCode",{parentName:"li"},"file:///C:/testing/api.raml")),Object(i.b)("li",{parentName:"ul"},"Relative path: ",Object(i.b)("inlineCode",{parentName:"li"},"file:///api.raml"))),Object(i.b)("p",null,"MacOS and Unix:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Absolute path: ",Object(i.b)("inlineCode",{parentName:"li"},"file:///Users/aml/testing/api.raml")),Object(i.b)("li",{parentName:"ul"},"Relative path: ",Object(i.b)("inlineCode",{parentName:"li"},"file://api.raml"))),Object(i.b)("p",null,"Also, before parsing an AML dialect instance, you must register the dialect using the ",Object(i.b)("inlineCode",{parentName:"p"},"AMF.registerDialect()")," function."),Object(i.b)(o.a,{groupId:"languages",defaultValue:"java",values:[{label:"Java",value:"java"},{label:"JavaScript",value:"js"}],mdxType:"Tabs"},Object(i.b)(c.a,{value:"java",mdxType:"TabItem"},Object(i.b)(l.a,{language:"java",codeUrl:"examples/new-doc/src/test/java/ParsingTest.java",mdxType:"CodeGetter"})),Object(i.b)(c.a,{value:"js",mdxType:"TabItem"},Object(i.b)(l.a,{language:"js",codeUrl:"examples/new-doc/src/test/js/parsing.test.js",mdxType:"CodeGetter"}))))}m.isMDXComponent=!0},109:function(e,t,a){"use strict";a.d(t,"a",(function(){return p})),a.d(t,"b",(function(){return d}));var n=a(0),r=a.n(n);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function c(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=r.a.createContext({}),b=function(e){var t=r.a.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):c(c({},t),e)),a},p=function(e){var t=b(e.components);return r.a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},m=r.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,i=e.originalType,o=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),p=b(a),m=n,d=p["".concat(o,".").concat(m)]||p[m]||u[m]||i;return a?r.a.createElement(d,c(c({ref:t},s),{},{components:a})):r.a.createElement(d,c({ref:t},s))}));function d(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=a.length,o=new Array(i);o[0]=m;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:n,o[1]=c;for(var s=2;s<i;s++)o[s]=a[s];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,a)}m.displayName="MDXCreateElement"},113:function(e,t,a){"use strict";var n=a(0),r=a.n(n),i=a(117),o=a(110),c=a(54),l=a.n(c),s=37,b=39;t.a=function(e){var t=e.lazy,a=e.block,c=e.defaultValue,p=e.values,u=e.groupId,m=e.className,d=Object(i.a)(),f=d.tabGroupChoices,g=d.setTabGroupChoices,h=Object(n.useState)(c),O=h[0],j=h[1],v=n.Children.toArray(e.children);if(null!=u){var y=f[u];null!=y&&y!==O&&p.some((function(e){return e.value===y}))&&j(y)}var A=function(e){j(e),null!=u&&g(u,e)},N=[];return r.a.createElement("div",null,r.a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:Object(o.a)("tabs",{"tabs--block":a},m)},p.map((function(e){var t=e.value,a=e.label;return r.a.createElement("li",{role:"tab",tabIndex:0,"aria-selected":O===t,className:Object(o.a)("tabs__item",l.a.tabItem,{"tabs__item--active":O===t}),key:t,ref:function(e){return N.push(e)},onKeyDown:function(e){!function(e,t,a){switch(a.keyCode){case b:!function(e,t){var a=e.indexOf(t)+1;e[a]?e[a].focus():e[0].focus()}(e,t);break;case s:!function(e,t){var a=e.indexOf(t)-1;e[a]?e[a].focus():e[e.length-1].focus()}(e,t)}}(N,e.target,e)},onFocus:function(){return A(t)},onClick:function(){A(t)}},a)}))),t?Object(n.cloneElement)(v.filter((function(e){return e.props.value===O}))[0],{className:"margin-vert--md"}):r.a.createElement("div",{className:"margin-vert--md"},v.map((function(e,t){return Object(n.cloneElement)(e,{key:t,hidden:e.props.value!==O})}))))}},114:function(e,t,a){"use strict";var n=a(3),r=a(0),i=a.n(r);t.a=function(e){var t=e.children,a=e.hidden,r=e.className;return i.a.createElement("div",Object(n.a)({role:"tabpanel"},{hidden:a,className:r}),t)}},115:function(e,t,a){"use strict";var n=a(4),r=a(0),i=a.n(r),o=a(119),c=function(e){function t(t){var a;return(a=e.call(this,t)||this).state={code:"",lineStart:0,lineEnd:0},a}Object(n.a)(t,e);var a=t.prototype;return a.componentDidMount=function(){var e=this;fetch("https://raw.githubusercontent.com/aml-org/"+this.props.codeUrl).then((function(e){return e.text()})).then((function(t){var a=t,n=e.props.lineStart,r=e.props.lineEnd;r-n>0&&(a=a.split("\n").slice(n,r).join("\n")),e.setState({code:a})})).catch((function(e){return console.error(e)}))},a.render=function(){return i.a.createElement(o.a,{className:this.props.language},this.state.code)},t}(r.Component);t.a=c},225:function(e,t,a){"use strict";a.r(t),t.default=a.p+"assets/images/parsing-graph-e9213bf147673deebdf6aec804c3467c.png"}}]);